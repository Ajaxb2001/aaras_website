{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abashett\\\\foodaaras_blog\\\\aaras_website\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../CSS/contact.css\"; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  // Form data state\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n\n  // Notification state\n  const [notification, setNotification] = useState({\n    isVisible: false,\n    message: \"Message sent Successfully!!!\"\n  });\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Reset notification state before the new submission\n    setNotification({\n      isVisible: false,\n      message: \"\"\n    });\n    try {\n      // Submit form data to the backend API\n      const response = await fetch(\"/api/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n\n      // Check if the submission was successful\n      if (response.ok) {\n        // Display success notification\n        setNotification({\n          isVisible: true,\n          message: \"Message sent Successfully!!!\"\n        });\n\n        // Reset form data\n        setFormData({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n        });\n      } else {\n        // If the server response was not ok, inform the user\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"There was an error submitting the form.\");\n      }\n    } catch (error) {\n      // Handle submission error by showing notification\n      setNotification({\n        isVisible: true,\n        message: error.message || \"There was an error submitting the form.\"\n      });\n    }\n\n    // Hide notification after 3 seconds\n    setTimeout(() => {\n      setNotification({\n        isVisible: false,\n        message: \"\"\n      });\n    }, 3000);\n  };\n\n  // JSX for the contact component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Do Contact Us \\u270C\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"form-input\",\n          value: formData.name,\n          onChange: handleChange,\n          placeholder: \"Your Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          className: \"form-input\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Your Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          className: \"form-textarea\",\n          value: formData.message,\n          onChange: handleChange,\n          placeholder: \"Your Message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form-button\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), notification.isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-card\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"6GrmMpJtRlhsXkee55TcqhxasSk=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","notification","setNotification","isVisible","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","handleChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/abashett/foodaaras_blog/aaras_website/src/components/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../CSS/contact.css\"; // Ensure this path is correct\r\n\r\nconst Contact = () => {\r\n  // Form data state\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  // Notification state\r\n  const [notification, setNotification] = useState({\r\n    isVisible: false,\r\n    message: \"Message sent Successfully!!!\",\r\n  });\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Reset notification state before the new submission\r\n    setNotification({\r\n      isVisible: false,\r\n      message: \"\",\r\n    });\r\n\r\n    try {\r\n      // Submit form data to the backend API\r\n      const response = await fetch(\"/api/contact\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      // Check if the submission was successful\r\n      if (response.ok) {\r\n        // Display success notification\r\n        setNotification({\r\n          isVisible: true,\r\n          message: \"Message sent Successfully!!!\",\r\n        });\r\n\r\n        // Reset form data\r\n        setFormData({\r\n          name: \"\",\r\n          email: \"\",\r\n          message: \"\",\r\n        });\r\n      } else {\r\n        // If the server response was not ok, inform the user\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.message || \"There was an error submitting the form.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      // Handle submission error by showing notification\r\n      setNotification({\r\n        isVisible: true,\r\n        message: error.message || \"There was an error submitting the form.\",\r\n      });\r\n    }\r\n\r\n    // Hide notification after 3 seconds\r\n    setTimeout(() => {\r\n      setNotification({ isVisible: false, message: \"\" });\r\n    }, 3000);\r\n  };\r\n\r\n  // JSX for the contact component\r\n  return (\r\n    <div className=\"contact-container\">\r\n      {/* ... rest of your component */}\r\n      <div className=\"contact-form\">\r\n        <h3>Do Contact Us ✌️</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"form-input\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Your Name\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Your Email\"\r\n            required\r\n          />\r\n          <textarea\r\n            name=\"message\"\r\n            className=\"form-textarea\"\r\n            value={formData.message}\r\n            onChange={handleChange}\r\n            placeholder=\"Your Message\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"form-button\">\r\n            Send Message\r\n          </button>\r\n        </form>\r\n      </div>\r\n      {/* Notification card */}\r\n      {notification.isVisible && (\r\n        <div className=\"notification-card\">\r\n          <p>{notification.message}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}