{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abashett\\\\foodaaras_blog\\\\aaras_website\\\\src\\\\components\\\\Recipes.js\";\n// Recipes.js\n\nimport React from \"react\";\nimport \"../CSS/Recipes.css\"; // Make sure to create a corresponding CSS file for styling\n\n// Dummy array of YouTube Shorts video IDs\n// Replace these with actual video IDs you want to display\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoIds = [\"video_id_1\", \"video_id_2\"\n// ... more video IDs\n];\nconst Recipes = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipes-container\",\n    children: videoIds.map((videoId, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: `YouTube Short ${index + 1}` // Unique title for each iframe\n        ,\n        src: `https://www.youtube.com/embed/${videoId}`,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        className: \"video-iframe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, videoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","videoIds","Recipes","className","children","map","videoId","index","title","src","frameBorder","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abashett/foodaaras_blog/aaras_website/src/components/Recipes.js"],"sourcesContent":["// Recipes.js\r\n\r\nimport React from \"react\";\r\nimport \"../CSS/Recipes.css\"; // Make sure to create a corresponding CSS file for styling\r\n\r\n// Dummy array of YouTube Shorts video IDs\r\n// Replace these with actual video IDs you want to display\r\nconst videoIds = [\r\n  \"video_id_1\",\r\n  \"video_id_2\",\r\n  // ... more video IDs\r\n];\r\n\r\nconst Recipes = () => {\r\n  return (\r\n    <div className=\"recipes-container\">\r\n      {videoIds.map((videoId, index) => (\r\n        <div key={videoId} className=\"card\">\r\n          <iframe\r\n            title={`YouTube Short ${index + 1}`} // Unique title for each iframe\r\n            src={`https://www.youtube.com/embed/${videoId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            className=\"video-iframe\"\r\n          ></iframe>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB,CAAC,CAAC;;AAE7B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,CACf,YAAY,EACZ;AACA;AAAA,CACD;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACEF,OAAA;IAAKG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BH,QAAQ,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BP,OAAA;MAAmBG,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjCJ,OAAA;QACEQ,KAAK,EAAG,iBAAgBD,KAAK,GAAG,CAAE,EAAE,CAAC;QAAA;QACrCE,GAAG,EAAG,iCAAgCH,OAAQ,EAAE;QAChDI,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,0FAA0F;QAChGC,eAAe;QACfT,SAAS,EAAC;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC,GARFV,OAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAjBIf,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}